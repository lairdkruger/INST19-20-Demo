{"ast":null,"code":"import{useMemo,useEffect}from'react';import{useThree,useFrame}from'react-three-fiber';import{EffectComposer,EffectPass,NoiseEffect,RenderPass,BloomEffect}from'postprocessing';export default function Postprocessing(){const _useThree=useThree(),gl=_useThree.gl,scene=_useThree.scene,camera=_useThree.camera,size=_useThree.size;const composer=useMemo(()=>{const composer=new EffectComposer(gl);composer.addPass(new RenderPass(scene,camera));const bloomEffect=new BloomEffect({luminanceThreshold:0.0,intensity:0.75,luminanceSmoothing:0.0025});const noiseEffect=new NoiseEffect({premultiply:true});const effectPass=new EffectPass(camera,noiseEffect,bloomEffect);effectPass.renderToScreen=true;composer.addPass(effectPass);return composer;},[]);useEffect(()=>void composer.setSize(size.width,size.height),[size]);return useFrame((_,delta)=>composer.render(delta),1);}","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/Demo/INST19-20-Demo/INST19-20-Demo/src/components/postprocessing/Postprocessing.js"],"names":["useMemo","useEffect","useThree","useFrame","EffectComposer","EffectPass","NoiseEffect","RenderPass","BloomEffect","Postprocessing","gl","scene","camera","size","composer","addPass","bloomEffect","luminanceThreshold","intensity","luminanceSmoothing","noiseEffect","premultiply","effectPass","renderToScreen","setSize","width","height","_","delta","render"],"mappings":"AAAA,OAAQA,OAAR,CAAiBC,SAAjB,KAAiC,OAAjC,CACA,OAAQC,QAAR,CAAkBC,QAAlB,KAAiC,mBAAjC,CACA,OACIC,cADJ,CAEIC,UAFJ,CAGIC,WAHJ,CAIIC,UAJJ,CAKIC,WALJ,KAMO,gBANP,CAQA,cAAe,SAASC,CAAAA,cAAT,EAA0B,iBACHP,QAAQ,EADL,CAC9BQ,EAD8B,WAC9BA,EAD8B,CAC1BC,KAD0B,WAC1BA,KAD0B,CACnBC,MADmB,WACnBA,MADmB,CACXC,IADW,WACXA,IADW,CAGrC,KAAMC,CAAAA,QAAQ,CAAGd,OAAO,CAAC,IAAM,CAC3B,KAAMc,CAAAA,QAAQ,CAAG,GAAIV,CAAAA,cAAJ,CAAmBM,EAAnB,CAAjB,CACAI,QAAQ,CAACC,OAAT,CAAiB,GAAIR,CAAAA,UAAJ,CAAeI,KAAf,CAAsBC,MAAtB,CAAjB,EAEA,KAAMI,CAAAA,WAAW,CAAG,GAAIR,CAAAA,WAAJ,CAAgB,CAChCS,kBAAkB,CAAE,GADY,CAEhCC,SAAS,CAAE,IAFqB,CAGhCC,kBAAkB,CAAE,MAHY,CAAhB,CAApB,CAMA,KAAMC,CAAAA,WAAW,CAAG,GAAId,CAAAA,WAAJ,CAAgB,CAACe,WAAW,CAAE,IAAd,CAAhB,CAApB,CAEA,KAAMC,CAAAA,UAAU,CAAG,GAAIjB,CAAAA,UAAJ,CAAeO,MAAf,CAAuBQ,WAAvB,CAAoCJ,WAApC,CAAnB,CAEAM,UAAU,CAACC,cAAX,CAA4B,IAA5B,CACAT,QAAQ,CAACC,OAAT,CAAiBO,UAAjB,EAEA,MAAOR,CAAAA,QAAP,CACH,CAlBuB,CAkBrB,EAlBqB,CAAxB,CAoBAb,SAAS,CAAC,IAAM,IAAKa,CAAAA,QAAQ,CAACU,OAAT,CAAiBX,IAAI,CAACY,KAAtB,CAA6BZ,IAAI,CAACa,MAAlC,CAAZ,CAAuD,CAACb,IAAD,CAAvD,CAAT,CAEA,MAAOV,CAAAA,QAAQ,CAAC,CAACwB,CAAD,CAAIC,KAAJ,GAAcd,QAAQ,CAACe,MAAT,CAAgBD,KAAhB,CAAf,CAAuC,CAAvC,CAAf,CACH","sourcesContent":["import {useMemo, useEffect} from 'react'\nimport {useThree, useFrame} from 'react-three-fiber'\nimport {\n    EffectComposer,\n    EffectPass,\n    NoiseEffect,\n    RenderPass,\n    BloomEffect,\n} from 'postprocessing'\n\nexport default function Postprocessing() {\n    const {gl, scene, camera, size} = useThree()\n\n    const composer = useMemo(() => {\n        const composer = new EffectComposer(gl)\n        composer.addPass(new RenderPass(scene, camera))\n\n        const bloomEffect = new BloomEffect({\n            luminanceThreshold: 0.0,\n            intensity: 0.75,\n            luminanceSmoothing: 0.0025,\n        })\n\n        const noiseEffect = new NoiseEffect({premultiply: true})\n\n        const effectPass = new EffectPass(camera, noiseEffect, bloomEffect)\n\n        effectPass.renderToScreen = true\n        composer.addPass(effectPass)\n\n        return composer\n    }, [])\n\n    useEffect(() => void composer.setSize(size.width, size.height), [size])\n\n    return useFrame((_, delta) => composer.render(delta), 1)\n}\n"]},"metadata":{},"sourceType":"module"}