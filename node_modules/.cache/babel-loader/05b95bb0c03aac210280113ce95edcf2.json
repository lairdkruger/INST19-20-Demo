{"ast":null,"code":"import _objectWithoutProperties from\"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useRef}from'react';import*as THREE from'three';import{useLoader}from'react-three-fiber';import'./materials/BasicMaterial';// A 3D plane representing an HTML image element with CSS positioning\n// The image uses a custom material which allows for shader manipulation\nfunction BasicPlane(_ref){let _ref$color=_ref.color,color=_ref$color===void 0?'white':_ref$color,props=_objectWithoutProperties(_ref,[\"color\"]);const material=useRef();const texture=useLoader(THREE.TextureLoader,props.src);// BREAKS IF THIS IS REMOVED???\nvar images=document.getElementsByClassName('image-plane');images=Array.from(images);//convert to array\nconst image=images.filter(el=>el.dataset.id===props.image_id)[0];const imageSize=new THREE.Vector2(0,0);const imageOffset=new THREE.Vector2(0,0);const _image$getBoundingCli=image.getBoundingClientRect(),width=_image$getBoundingCli.width,height=_image$getBoundingCli.height,left=_image$getBoundingCli.left;imageSize.set(width,height);imageOffset.set(left-window.innerWidth/2+width/2,0.0);const imageTexture=useLoader(THREE.TextureLoader,image.src);return/*#__PURE__*/React.createElement(\"mesh\",{position:[imageOffset.x,imageOffset.y,0],scale:[imageSize.x,imageSize.y,1]},/*#__PURE__*/React.createElement(\"planeBufferGeometry\",{attach:\"geometry\",args:[1,1,32,32]}),/*#__PURE__*/React.createElement(\"basicMaterial\",{ref:material,attach:\"material\",map:imageTexture,transparent:true}));}export default BasicPlane;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/media/BasicPlane.js"],"names":["React","useRef","THREE","useLoader","BasicPlane","color","props","material","texture","TextureLoader","src","images","document","getElementsByClassName","Array","from","image","filter","el","dataset","id","image_id","imageSize","Vector2","imageOffset","getBoundingClientRect","width","height","left","set","window","innerWidth","imageTexture","x","y"],"mappings":"0NAAA,MAAOA,CAAAA,KAAP,EAAeC,MAAf,KAA4B,OAA5B,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CAEA,MAAO,2BAAP,CAEA;AACA;AAEA,QAASC,CAAAA,UAAT,MAAiD,qBAA5BC,KAA4B,CAA5BA,KAA4B,qBAApB,OAAoB,YAARC,KAAQ,0CAC7C,KAAMC,CAAAA,QAAQ,CAAGN,MAAM,EAAvB,CACA,KAAMO,CAAAA,OAAO,CAAGL,SAAS,CAACD,KAAK,CAACO,aAAP,CAAsBH,KAAK,CAACI,GAA5B,CAAzB,CAA0D;AAC1D,GAAIC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAb,CACAF,MAAM,CAAGG,KAAK,CAACC,IAAN,CAAWJ,MAAX,CAAT,CAA4B;AAE5B,KAAMK,CAAAA,KAAK,CAAGL,MAAM,CAACM,MAAP,CAAeC,EAAD,EAAQA,EAAE,CAACC,OAAH,CAAWC,EAAX,GAAkBd,KAAK,CAACe,QAA9C,EAAwD,CAAxD,CAAd,CAEA,KAAMC,CAAAA,SAAS,CAAG,GAAIpB,CAAAA,KAAK,CAACqB,OAAV,CAAkB,CAAlB,CAAqB,CAArB,CAAlB,CACA,KAAMC,CAAAA,WAAW,CAAG,GAAItB,CAAAA,KAAK,CAACqB,OAAV,CAAkB,CAAlB,CAAqB,CAArB,CAApB,CAT6C,4BAWfP,KAAK,CAACS,qBAAN,EAXe,CAWtCC,KAXsC,uBAWtCA,KAXsC,CAW/BC,MAX+B,uBAW/BA,MAX+B,CAWvBC,IAXuB,uBAWvBA,IAXuB,CAa7CN,SAAS,CAACO,GAAV,CAAcH,KAAd,CAAqBC,MAArB,EACAH,WAAW,CAACK,GAAZ,CAAgBD,IAAI,CAAGE,MAAM,CAACC,UAAP,CAAoB,CAA3B,CAA+BL,KAAK,CAAG,CAAvD,CAA0D,GAA1D,EAEA,KAAMM,CAAAA,YAAY,CAAG7B,SAAS,CAACD,KAAK,CAACO,aAAP,CAAsBO,KAAK,CAACN,GAA5B,CAA9B,CAEA,mBACI,4BACI,QAAQ,CAAE,CAACc,WAAW,CAACS,CAAb,CAAgBT,WAAW,CAACU,CAA5B,CAA+B,CAA/B,CADd,CAEI,KAAK,CAAE,CAACZ,SAAS,CAACW,CAAX,CAAcX,SAAS,CAACY,CAAxB,CAA2B,CAA3B,CAFX,eAII,2CAAqB,MAAM,CAAC,UAA5B,CAAuC,IAAI,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAA7C,EAJJ,cAKI,qCACI,GAAG,CAAE3B,QADT,CAEI,MAAM,CAAC,UAFX,CAGI,GAAG,CAAEyB,YAHT,CAII,WAAW,CAAE,IAJjB,EALJ,CADJ,CAcH,CAED,cAAe5B,CAAAA,UAAf","sourcesContent":["import React, {useRef} from 'react'\nimport * as THREE from 'three'\nimport {useLoader} from 'react-three-fiber'\n\nimport './materials/BasicMaterial'\n\n// A 3D plane representing an HTML image element with CSS positioning\n// The image uses a custom material which allows for shader manipulation\n\nfunction BasicPlane({color = 'white', ...props}) {\n    const material = useRef()\n    const texture = useLoader(THREE.TextureLoader, props.src) // BREAKS IF THIS IS REMOVED???\n    var images = document.getElementsByClassName('image-plane')\n    images = Array.from(images) //convert to array\n\n    const image = images.filter((el) => el.dataset.id === props.image_id)[0]\n\n    const imageSize = new THREE.Vector2(0, 0)\n    const imageOffset = new THREE.Vector2(0, 0)\n\n    const {width, height, left} = image.getBoundingClientRect()\n\n    imageSize.set(width, height)\n    imageOffset.set(left - window.innerWidth / 2 + width / 2, 0.0)\n\n    const imageTexture = useLoader(THREE.TextureLoader, image.src)\n\n    return (\n        <mesh\n            position={[imageOffset.x, imageOffset.y, 0]}\n            scale={[imageSize.x, imageSize.y, 1]}\n        >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\n            <basicMaterial\n                ref={material}\n                attach=\"material\"\n                map={imageTexture}\n                transparent={true}\n            />\n        </mesh>\n    )\n}\n\nexport default BasicPlane\n"]},"metadata":{},"sourceType":"module"}