{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/LightbarsInstanced.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport '../materials/LightbarMaterial'; // re-use for instance computations\n\nconst scratchObject3D = new THREE.Object3D();\n\nconst InstancedPoints = ({\n  data\n}) => {\n  const meshRef = React.useRef();\n  const numPoints = data.length; // update instance matrices only when needed\n\n  React.useEffect(() => {\n    const mesh = meshRef.current; // set the transform matrix for each instance\n\n    for (let i = 0; i < numPoints; ++i) {\n      const x = i % 30 * 1.05;\n      const y = Math.floor(i / 30) * 1.05;\n      const z = 0;\n      scratchObject3D.position.set(x, y, z);\n      scratchObject3D.rotation.set(0.5 * Math.PI, 0, 0); // cylinders face z direction\n\n      scratchObject3D.updateMatrix();\n      mesh.setMatrixAt(i, scratchObject3D.matrix);\n    }\n\n    mesh.instanceMatrix.needsUpdate = true;\n  }, [numPoints]);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    ref: meshRef,\n    args: [null, null, numPoints],\n    frustumCulled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"cylinderBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.5, 0.5, 0.15, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default InstancedPoints;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/LightbarsInstanced.js"],"names":["React","useRef","useEffect","useState","THREE","useFrame","useThree","scratchObject3D","Object3D","InstancedPoints","data","meshRef","numPoints","length","mesh","current","i","x","y","Math","floor","z","position","set","rotation","PI","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,mBAAjC;AAEA,OAAO,+BAAP,C,CAEA;;AACA,MAAMC,eAAe,GAAG,IAAIH,KAAK,CAACI,QAAV,EAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAChC,QAAMC,OAAO,GAAGX,KAAK,CAACC,MAAN,EAAhB;AACA,QAAMW,SAAS,GAAGF,IAAI,CAACG,MAAvB,CAFgC,CAIhC;;AACAb,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClB,UAAMY,IAAI,GAAGH,OAAO,CAACI,OAArB,CADkB,CAGlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+B,EAAEI,CAAjC,EAAoC;AAChC,YAAMC,CAAC,GAAID,CAAC,GAAG,EAAL,GAAW,IAArB;AACA,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,IAAqB,IAA/B;AACA,YAAMK,CAAC,GAAG,CAAV;AAEAd,MAAAA,eAAe,CAACe,QAAhB,CAAyBC,GAAzB,CAA6BN,CAA7B,EAAgCC,CAAhC,EAAmCG,CAAnC;AACAd,MAAAA,eAAe,CAACiB,QAAhB,CAAyBD,GAAzB,CAA6B,MAAMJ,IAAI,CAACM,EAAxC,EAA4C,CAA5C,EAA+C,CAA/C,EANgC,CAMkB;;AAClDlB,MAAAA,eAAe,CAACmB,YAAhB;AACAZ,MAAAA,IAAI,CAACa,WAAL,CAAiBX,CAAjB,EAAoBT,eAAe,CAACqB,MAApC;AACH;;AAEDd,IAAAA,IAAI,CAACe,cAAL,CAAoBC,WAApB,GAAkC,IAAlC;AACH,GAhBD,EAgBG,CAAClB,SAAD,CAhBH;AAkBA,sBACI;AAAe,IAAA,GAAG,EAAED,OAApB;AAA6B,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAaC,SAAb,CAAnC;AAA4D,IAAA,aAAa,EAAE,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAwB,IAAA,MAAM,EAAC,UAA/B;AAA0C,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,EAAjB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAsB,IAAA,MAAM,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA7BD;;AA+BA,eAAeH,eAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react'\nimport * as THREE from 'three'\nimport {useFrame, useThree} from 'react-three-fiber'\n\nimport '../materials/LightbarMaterial'\n\n// re-use for instance computations\nconst scratchObject3D = new THREE.Object3D()\n\nconst InstancedPoints = ({data}) => {\n    const meshRef = React.useRef()\n    const numPoints = data.length\n\n    // update instance matrices only when needed\n    React.useEffect(() => {\n        const mesh = meshRef.current\n\n        // set the transform matrix for each instance\n        for (let i = 0; i < numPoints; ++i) {\n            const x = (i % 30) * 1.05\n            const y = Math.floor(i / 30) * 1.05\n            const z = 0\n\n            scratchObject3D.position.set(x, y, z)\n            scratchObject3D.rotation.set(0.5 * Math.PI, 0, 0) // cylinders face z direction\n            scratchObject3D.updateMatrix()\n            mesh.setMatrixAt(i, scratchObject3D.matrix)\n        }\n\n        mesh.instanceMatrix.needsUpdate = true\n    }, [numPoints])\n\n    return (\n        <instancedMesh ref={meshRef} args={[null, null, numPoints]} frustumCulled={false}>\n            <cylinderBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.15, 32]} />\n            <meshStandardMaterial attach=\"material\" color=\"#fff\" />\n        </instancedMesh>\n    )\n}\n\nexport default InstancedPoints\n"]},"metadata":{},"sourceType":"module"}