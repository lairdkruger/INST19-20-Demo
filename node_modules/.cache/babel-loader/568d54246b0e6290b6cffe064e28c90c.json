{"ast":null,"code":"import _slicedToArray from \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Lightbar.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport '../materials/LightbarMaterial';\n\nfunction Lightbar(props) {\n  const bar = useRef();\n  const material = useRef();\n\n  const _useThree = useThree(),\n        viewport = _useThree.viewport;\n\n  const minWidth = -viewport.width / 1.75,\n        maxWidth = viewport.width / 1.75;\n  const minInterval = 1000,\n        maxInterval = 5000;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        posX = _useState2[0],\n        setPosX = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        opacity = _useState4[0],\n        setOpacity = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hovered = _useState6[0],\n        setHovered = _useState6[1];\n\n  let xPos = 0;\n  let alpha = 0; // returns random float between lower and upper bounds\n\n  function random(lowerBound, upperBound) {\n    return lowerBound + Math.random() * (upperBound + 1 - lowerBound);\n  } // custom hook to make intervals work in react\n\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef(); // Remember the latest function.\n\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]); // Set up the interval.\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  useInterval(() => {\n    xPos = random(minWidth, maxWidth);\n    alpha = Math.random() / 5;\n  }, random(minInterval, maxInterval)); // lerp bar to its new position\n\n  useFrame(() => {\n    bar.current.position.x = lerp(bar.current.position.x, xPos, 0.01);\n\n    if (hovered) {\n      material.current.uOpacity = 1.0;\n    } else {\n      material.current.uOpacity = lerp(material.current.uOpacity, alpha, 0.01);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: bar,\n    onPointerOver: e => setHovered(true),\n    onPointerOut: e => setHovered(false),\n    position: [0, 0, 1 / props.bar.width],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [props.bar.width, props.bar.height],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"lightbarMaterial\", {\n    ref: material,\n    attach: \"material\",\n    uColor: props.bar.color,\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Lightbar;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Lightbar.js"],"names":["React","useRef","useState","useEffect","useThree","useFrame","lerp","Lightbar","props","bar","material","viewport","minWidth","width","maxWidth","minInterval","maxInterval","posX","setPosX","opacity","setOpacity","hovered","setHovered","xPos","alpha","random","lowerBound","upperBound","Math","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","position","x","uOpacity","e","height","color"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport {useThree, useFrame} from 'react-three-fiber'\nimport lerp from 'lerp'\n\nimport '../materials/LightbarMaterial'\n\nfunction Lightbar(props) {\n    const bar = useRef()\n    const material = useRef()\n\n    const {viewport} = useThree()\n    const [minWidth, maxWidth] = [-viewport.width / 1.75, viewport.width / 1.75]\n    const [minInterval, maxInterval] = [1000, 5000]\n\n    const [posX, setPosX] = useState(0)\n    const [opacity, setOpacity] = useState(0)\n    const [hovered, setHovered] = useState(false)\n\n    let xPos = 0\n    let alpha = 0\n\n    // returns random float between lower and upper bounds\n    function random(lowerBound, upperBound) {\n        return lowerBound + Math.random() * (upperBound + 1 - lowerBound)\n    }\n\n    // custom hook to make intervals work in react\n    function useInterval(callback, delay) {\n        const savedCallback = useRef()\n\n        // Remember the latest function.\n        useEffect(() => {\n            savedCallback.current = callback\n        }, [callback])\n\n        // Set up the interval.\n        useEffect(() => {\n            function tick() {\n                savedCallback.current()\n            }\n            if (delay !== null) {\n                let id = setInterval(tick, delay)\n                return () => clearInterval(id)\n            }\n        }, [delay])\n    }\n\n    useInterval(() => {\n        xPos = random(minWidth, maxWidth)\n        alpha = Math.random() / 5\n    }, random(minInterval, maxInterval))\n\n    // lerp bar to its new position\n    useFrame(() => {\n        bar.current.position.x = lerp(bar.current.position.x, xPos, 0.01)\n        if (hovered) {\n            material.current.uOpacity = 1.0\n        } else {\n            material.current.uOpacity = lerp(material.current.uOpacity, alpha, 0.01)\n        }\n    })\n\n    return (\n        <mesh\n            ref={bar}\n            onPointerOver={(e) => setHovered(true)}\n            onPointerOut={(e) => setHovered(false)}\n            position={[0, 0, 1 / props.bar.width]}\n        >\n            <planeBufferGeometry\n                attach=\"geometry\"\n                args={[props.bar.width, props.bar.height]}\n            />\n            <lightbarMaterial\n                ref={material}\n                attach=\"material\"\n                uColor={props.bar.color}\n                transparent={true}\n            />\n        </mesh>\n    )\n}\n\nexport default Lightbar\n"]},"metadata":{},"sourceType":"module"}