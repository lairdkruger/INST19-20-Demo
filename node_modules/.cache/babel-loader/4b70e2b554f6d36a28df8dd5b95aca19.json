{"ast":null,"code":"import { ShaderMaterial, Color } from 'three';\nimport { extend } from 'react-three-fiber';\n\nclass GradientOpacityMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        uColor: {\n          value: new Color('#000000')\n        }\n      },\n      vertexShader: \"\\n        varying vec2 vUv;\\n        void main() {\\n          vec3 pos = position;\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\\n        }\",\n      fragmentShader: \"\\n        uniform vec3 uColor;\\n        varying vec2 vUv;\\n\\n        void main() {\\n          float x = vUv.x;\\n          float y = vUv.y;\\n\\n          float opacity = 1.0-y;\\n\\n          gl_FragColor = vec4(uColor.rgb, opacity);\\n        }\"\n    });\n  }\n\n  set uColor(value) {\n    this.uniforms.uColor.value = value;\n  }\n\n  get uColor() {\n    return this.uniforms.uColor.value;\n  }\n\n}\n\nextend({\n  GradientOpacityMaterial\n});","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/materials/GradientOpacityMaterial.js"],"names":["ShaderMaterial","Color","extend","GradientOpacityMaterial","constructor","uniforms","uColor","value","vertexShader","fragmentShader"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,KAAxB,QAAoC,OAApC;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AAEA,MAAMC,uBAAN,SAAsCH,cAAtC,CAAqD;AACjDI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAU,SAAV;AAAR;AADF,OADR;AAKFO,MAAAA,YAAY,kMALV;AAaFC,MAAAA,cAAc;AAbZ,KAAN;AA0BH;;AAED,MAAIH,MAAJ,CAAWC,KAAX,EAAkB;AACd,SAAKF,QAAL,CAAcC,MAAd,CAAqBC,KAArB,GAA6BA,KAA7B;AACH;;AAED,MAAID,MAAJ,GAAa;AACT,WAAO,KAAKD,QAAL,CAAcC,MAAd,CAAqBC,KAA5B;AACH;;AApCgD;;AAuCrDL,MAAM,CAAC;AAACC,EAAAA;AAAD,CAAD,CAAN","sourcesContent":["import {ShaderMaterial, Color} from 'three'\nimport {extend} from 'react-three-fiber'\n\nclass GradientOpacityMaterial extends ShaderMaterial {\n    constructor() {\n        super({\n            uniforms: {\n                uColor: {value: new Color('#000000')},\n            },\n\n            vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vec3 pos = position;\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n        }`,\n\n            fragmentShader: `\n        uniform vec3 uColor;\n        varying vec2 vUv;\n\n        void main() {\n          float x = vUv.x;\n          float y = vUv.y;\n\n          float opacity = 1.0-y;\n\n          gl_FragColor = vec4(uColor.rgb, opacity);\n        }`,\n        })\n    }\n\n    set uColor(value) {\n        this.uniforms.uColor.value = value\n    }\n\n    get uColor() {\n        return this.uniforms.uColor.value\n    }\n}\n\nextend({GradientOpacityMaterial})\n"]},"metadata":{},"sourceType":"module"}