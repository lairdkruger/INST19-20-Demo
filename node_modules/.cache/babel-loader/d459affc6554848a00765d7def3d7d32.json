{"ast":null,"code":"import _slicedToArray from \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Lightbar.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport '../materials/LightbarMaterial';\n\nfunction Lightbar(props) {\n  const bar = useRef();\n  const material = useRef();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hovered = _useState2[0],\n        setHovered = _useState2[1];\n\n  const _useThree = useThree(),\n        viewport = _useThree.viewport;\n\n  const minWidth = -viewport.width / 1.75,\n        maxWidth = viewport.width / 1.75;\n  const minInterval = 1000,\n        maxInterval = 5000;\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        posX = _useState4[0],\n        setPosX = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        opacity = _useState6[0],\n        setOpacity = _useState6[1]; // returns random float between lower and upper bounds\n\n\n  function random(lowerBound, upperBound) {\n    return lowerBound + Math.random() * (upperBound + 1 - lowerBound);\n  } // custom hook to make intervals work in react\n\n\n  function useInterval(callback, delay) {\n    const savedCallback = useRef(); // Remember the latest function.\n\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]); // Set up the interval.\n\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  useInterval(() => {\n    setPosX(random(minWidth, maxWidth));\n    setOpacity(Math.random() / 5);\n  }, random(minInterval, maxInterval)); // lerp bar to its new position\n\n  useFrame(() => {\n    bar.current.position.x = lerp(bar.current.position.x, posX, 0.01);\n    material.current.uOpacity = lerp(material.current.uOpacity, opacity, 0.01);\n    const velocity = Math.abs(bar.current.position.x - posX);\n    material.current.uShift = velocity;\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: bar,\n    onPointerOver: () => setHovered(true),\n    onPointerOut: () => setHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [props.bar.width, props.bar.height],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"lightbarMaterial\", {\n    ref: material,\n    onMouseOver: setHovered(true),\n    attach: \"material\",\n    uColor: props.bar.color,\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Lightbar;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Lightbar.js"],"names":["React","useRef","useState","useEffect","useThree","useFrame","lerp","Lightbar","props","bar","material","hovered","setHovered","viewport","minWidth","width","maxWidth","minInterval","maxInterval","posX","setPosX","opacity","setOpacity","random","lowerBound","upperBound","Math","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","position","x","uOpacity","velocity","abs","uShift","height","color"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport {useThree, useFrame} from 'react-three-fiber'\nimport lerp from 'lerp'\n\nimport '../materials/LightbarMaterial'\n\nfunction Lightbar(props) {\n    const bar = useRef()\n    const material = useRef()\n\n    const [hovered, setHovered] = useState(false)\n\n    const {viewport} = useThree()\n    const [minWidth, maxWidth] = [-viewport.width / 1.75, viewport.width / 1.75]\n    const [minInterval, maxInterval] = [1000, 5000]\n\n    const [posX, setPosX] = useState(0)\n    const [opacity, setOpacity] = useState(0)\n\n    // returns random float between lower and upper bounds\n    function random(lowerBound, upperBound) {\n        return lowerBound + Math.random() * (upperBound + 1 - lowerBound)\n    }\n\n    // custom hook to make intervals work in react\n    function useInterval(callback, delay) {\n        const savedCallback = useRef()\n\n        // Remember the latest function.\n        useEffect(() => {\n            savedCallback.current = callback\n        }, [callback])\n\n        // Set up the interval.\n        useEffect(() => {\n            function tick() {\n                savedCallback.current()\n            }\n            if (delay !== null) {\n                let id = setInterval(tick, delay)\n                return () => clearInterval(id)\n            }\n        }, [delay])\n    }\n\n    useInterval(() => {\n        setPosX(random(minWidth, maxWidth))\n        setOpacity(Math.random() / 5)\n    }, random(minInterval, maxInterval))\n\n    // lerp bar to its new position\n    useFrame(() => {\n        bar.current.position.x = lerp(bar.current.position.x, posX, 0.01)\n        material.current.uOpacity = lerp(material.current.uOpacity, opacity, 0.01)\n\n        const velocity = Math.abs(bar.current.position.x - posX)\n        material.current.uShift = velocity\n    })\n\n    return (\n        <mesh\n            ref={bar}\n            onPointerOver={() => setHovered(true)}\n            onPointerOut={() => setHovered(false)}\n        >\n            <planeBufferGeometry\n                attach=\"geometry\"\n                args={[props.bar.width, props.bar.height]}\n            />\n            <lightbarMaterial\n                ref={material}\n                onMouseOver={setHovered(true)}\n                attach=\"material\"\n                uColor={props.bar.color}\n                transparent={true}\n            />\n        </mesh>\n    )\n}\n\nexport default Lightbar\n"]},"metadata":{},"sourceType":"module"}