{"ast":null,"code":"import _objectWithoutProperties from \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/Blocks.js\";\nimport React, { createContext, useRef, useContext } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport state from '../store'; // Nestable content block for a declarative scroll rig\n// Based on Paul Henschel's work:\n// https://tympanus.net/codrops/2019/12/16/scroll-refraction-and-shader-effects-in-three-js-and-react/\n// Offset: section index (eg: offset = 2 will be the third content section)\n// Factor: sets block's speed when page is scrolled\n\nconst offsetContext = createContext(0);\n\nfunction Block(_ref) {\n  let children = _ref.children,\n      offset = _ref.offset,\n      factor = _ref.factor,\n      props = _objectWithoutProperties(_ref, [\"children\", \"offset\", \"factor\"]);\n\n  // Fetch parent offset and the height of a single section\n  const _useBlock = useBlock(),\n        parentOffset = _useBlock.offset,\n        sectionHeight = _useBlock.sectionHeight,\n        aspect = _useBlock.aspect;\n\n  const ref = useRef();\n  offset = offset !== undefined ? offset : parentOffset; // Runs every frame and lerps the inner block into its place\n\n  useFrame(() => {\n    const curY = ref.current.position.y;\n    const curTop = state.top.current / aspect;\n    ref.current.position.y = lerp(curY, curTop / state.zoom * factor, 0.1);\n  });\n  return /*#__PURE__*/React.createElement(offsetContext.Provider, {\n    value: offset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"group\", Object.assign({}, props, {\n    position: [0, -sectionHeight * offset * factor, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, children)));\n}\n\nfunction useBlock() {\n  const sections = state.sections,\n        pages = state.pages,\n        zoom = state.zoom;\n\n  const _useThree = useThree(),\n        size = _useThree.size,\n        viewport = _useThree.viewport;\n\n  const offset = useContext(offsetContext);\n  const viewportWidth = viewport.width;\n  const viewportHeight = viewport.height;\n  const canvasWidth = viewportWidth / zoom;\n  const canvasHeight = viewportHeight / zoom;\n  const mobile = size.width < 700;\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\n  const aspect = size.height / viewportHeight;\n  return {\n    aspect,\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight\n  };\n}\n\nexport { Block, useBlock };","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/Blocks.js"],"names":["React","createContext","useRef","useContext","useFrame","useThree","lerp","state","offsetContext","Block","children","offset","factor","props","useBlock","parentOffset","sectionHeight","aspect","ref","undefined","curY","current","position","y","curTop","top","zoom","sections","pages","size","viewport","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth"],"mappings":"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","sourcesContent":["import React, {createContext, useRef, useContext} from 'react'\nimport {useFrame, useThree} from 'react-three-fiber'\nimport lerp from 'lerp'\nimport state from '../store'\n\n// Nestable content block for a declarative scroll rig\n// Based on Paul Henschel's work:\n// https://tympanus.net/codrops/2019/12/16/scroll-refraction-and-shader-effects-in-three-js-and-react/\n\n// Offset: section index (eg: offset = 2 will be the third content section)\n// Factor: sets block's speed when page is scrolled\n\nconst offsetContext = createContext(0)\n\nfunction Block({children, offset, factor, ...props}) {\n    // Fetch parent offset and the height of a single section\n    const {offset: parentOffset, sectionHeight, aspect} = useBlock()\n    const ref = useRef()\n    offset = offset !== undefined ? offset : parentOffset\n\n    // Runs every frame and lerps the inner block into its place\n    useFrame(() => {\n        const curY = ref.current.position.y\n        const curTop = state.top.current / aspect\n\n        ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n    })\n\n    return (\n        <offsetContext.Provider value={offset}>\n            <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n                <group ref={ref}>{children}</group>\n            </group>\n        </offsetContext.Provider>\n    )\n}\n\nfunction useBlock() {\n    const {sections, pages, zoom} = state\n    const {size, viewport} = useThree()\n    const offset = useContext(offsetContext)\n    const viewportWidth = viewport.width\n    const viewportHeight = viewport.height\n    const canvasWidth = viewportWidth / zoom\n    const canvasHeight = viewportHeight / zoom\n    const mobile = size.width < 700\n    const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n    const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n    const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n    const aspect = size.height / viewportHeight\n    return {\n        aspect,\n        viewport,\n        offset,\n        viewportWidth,\n        viewportHeight,\n        canvasWidth,\n        canvasHeight,\n        mobile,\n        margin,\n        contentMaxWidth,\n        sectionHeight,\n    }\n}\n\nexport {Block, useBlock}\n"]},"metadata":{},"sourceType":"module"}