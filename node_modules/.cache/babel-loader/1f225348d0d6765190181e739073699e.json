{"ast":null,"code":"import { ShaderMaterial, Color } from 'three';\nimport { extend } from 'react-three-fiber';\n\nclass BasicMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        opacity: {\n          value: 1\n        },\n        image_texture: {\n          value: null\n        }\n      },\n      vertexShader: \"\\n                varying vec2 vUv;\\n\\n                void main() {\\n                    vec3 pos = position;\\n                    vUv = uv;\\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\\n            }\",\n      fragmentShader: \"\\n                uniform sampler2D image_texture;\\n                uniform float opacity;\\n\\n                varying vec2 vUv;\\n                \\n                void main() {\\n                    vec4 outColor = texture2D(image_texture, vUv);\\n\\n                    gl_FragColor = vec4(outColor, opacity);\\n            }\"\n    });\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value;\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value;\n  }\n\n  set map(value) {\n    this.uniforms.image_texture.value = value;\n  }\n\n  get map() {\n    return this.uniforms.image_texture.value;\n  }\n\n}\n\nextend({\n  BasicMaterial\n});","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/media/materials/BasicMaterial.js"],"names":["ShaderMaterial","Color","extend","BasicMaterial","constructor","uniforms","opacity","value","image_texture","vertexShader","fragmentShader","map"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,KAAxB,QAAoC,OAApC;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AAEA,MAAMC,aAAN,SAA4BH,cAA5B,CAA2C;AACvCI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SADH;AAENC,QAAAA,aAAa,EAAE;AAACD,UAAAA,KAAK,EAAE;AAAR;AAFT,OADR;AAMFE,MAAAA,YAAY,sPANV;AAeFC,MAAAA,cAAc;AAfZ,KAAN;AA2BH;;AAED,MAAIJ,OAAJ,GAAc;AACV,WAAO,KAAKD,QAAL,CAAcC,OAAd,CAAsBC,KAA7B;AACH;;AAED,MAAID,OAAJ,CAAYC,KAAZ,EAAmB;AACf,QAAI,KAAKF,QAAT,EAAmB,KAAKA,QAAL,CAAcC,OAAd,CAAsBC,KAAtB,GAA8BA,KAA9B;AACtB;;AAED,MAAII,GAAJ,CAAQJ,KAAR,EAAe;AACX,SAAKF,QAAL,CAAcG,aAAd,CAA4BD,KAA5B,GAAoCA,KAApC;AACH;;AAED,MAAII,GAAJ,GAAU;AACN,WAAO,KAAKN,QAAL,CAAcG,aAAd,CAA4BD,KAAnC;AACH;;AA7CsC;;AAgD3CL,MAAM,CAAC;AAACC,EAAAA;AAAD,CAAD,CAAN","sourcesContent":["import {ShaderMaterial, Color} from 'three'\nimport {extend} from 'react-three-fiber'\n\nclass BasicMaterial extends ShaderMaterial {\n    constructor() {\n        super({\n            uniforms: {\n                opacity: {value: 1},\n                image_texture: {value: null},\n            },\n\n            vertexShader: `\n                varying vec2 vUv;\n\n                void main() {\n                    vec3 pos = position;\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n            }`,\n\n            fragmentShader: `\n                uniform sampler2D image_texture;\n                uniform float opacity;\n\n                varying vec2 vUv;\n                \n                void main() {\n                    vec4 outColor = texture2D(image_texture, vUv);\n\n                    gl_FragColor = vec4(outColor, opacity);\n            }`,\n        })\n    }\n\n    get opacity() {\n        return this.uniforms.opacity.value\n    }\n\n    set opacity(value) {\n        if (this.uniforms) this.uniforms.opacity.value = value\n    }\n\n    set map(value) {\n        this.uniforms.image_texture.value = value\n    }\n\n    get map() {\n        return this.uniforms.image_texture.value\n    }\n}\n\nextend({BasicMaterial})\n"]},"metadata":{},"sourceType":"module"}