{"ast":null,"code":"import { ShaderMaterial, Color } from 'three';\nimport { extend } from 'react-three-fiber';\n\nclass LightbarMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        uColor: {\n          value: new Color('#FFFFFF')\n        },\n        uOpacity: {\n          value: 1.0\n        },\n        uTime: {\n          value: 0.0\n        },\n        uShift: {\n          value: 0.0\n        }\n      },\n      vertexShader: \"\\n        uniform float uShift;\\n        varying vec2 vUv;\\n        void main() {\\n          vec3 pos = position;\\n          pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * uShift * 5.0) * 0.125);\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\\n        }\",\n      fragmentShader: \"\\n        uniform vec3 uColor;\\n        uniform float uOpacity;\\n        uniform float uTime;\\n        uniform float uShift;\\n        varying vec2 vUv;\\n        void main() {\\n          \\n          gl_FragColor = vec4(uColor.rgb, uOpacity);\\n        }\"\n    });\n  }\n\n  set uColor(value) {\n    this.uniforms.uColor.value = value;\n  }\n\n  get uColor() {\n    return this.uniforms.uColor.value;\n  }\n\n  set uOpacity(value) {\n    this.uniforms.uOpacity.value = value;\n  }\n\n  get uOpacity() {\n    return this.uniforms.uOpacity.value;\n  }\n\n  set uTime(value) {\n    this.uniforms.time.value = value;\n  }\n\n  get uTime() {\n    return this.uniforms.time.value;\n  }\n\n  set uShift(value) {\n    this.uniforms.uShift.value = value;\n  }\n\n  get uShift() {\n    return this.uniforms.uShift.value;\n  }\n\n}\n\nextend({\n  LightbarMaterial\n});","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/materials/LightbarMaterial.js"],"names":["ShaderMaterial","Color","extend","LightbarMaterial","constructor","uniforms","uColor","value","uOpacity","uTime","uShift","vertexShader","fragmentShader","time"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,KAAxB,QAAoC,OAApC;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AAEA,MAAMC,gBAAN,SAA+BH,cAA/B,CAA8C;AAC1CI,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAU,SAAV;AAAR,SADF;AAENO,QAAAA,QAAQ,EAAE;AAACD,UAAAA,KAAK,EAAE;AAAR,SAFJ;AAGNE,QAAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAE;AAAR,SAHD;AAING,QAAAA,MAAM,EAAE;AAACH,UAAAA,KAAK,EAAE;AAAR;AAJF,OADR;AAQFI,MAAAA,YAAY,sUARV;AAkBFC,MAAAA,cAAc;AAlBZ,KAAN;AA6BH;;AAED,MAAIN,MAAJ,CAAWC,KAAX,EAAkB;AACd,SAAKF,QAAL,CAAcC,MAAd,CAAqBC,KAArB,GAA6BA,KAA7B;AACH;;AAED,MAAID,MAAJ,GAAa;AACT,WAAO,KAAKD,QAAL,CAAcC,MAAd,CAAqBC,KAA5B;AACH;;AAED,MAAIC,QAAJ,CAAaD,KAAb,EAAoB;AAChB,SAAKF,QAAL,CAAcG,QAAd,CAAuBD,KAAvB,GAA+BA,KAA/B;AACH;;AAED,MAAIC,QAAJ,GAAe;AACX,WAAO,KAAKH,QAAL,CAAcG,QAAd,CAAuBD,KAA9B;AACH;;AAED,MAAIE,KAAJ,CAAUF,KAAV,EAAiB;AACb,SAAKF,QAAL,CAAcQ,IAAd,CAAmBN,KAAnB,GAA2BA,KAA3B;AACH;;AAED,MAAIE,KAAJ,GAAY;AACR,WAAO,KAAKJ,QAAL,CAAcQ,IAAd,CAAmBN,KAA1B;AACH;;AACD,MAAIG,MAAJ,CAAWH,KAAX,EAAkB;AACd,SAAKF,QAAL,CAAcK,MAAd,CAAqBH,KAArB,GAA6BA,KAA7B;AACH;;AAED,MAAIG,MAAJ,GAAa;AACT,WAAO,KAAKL,QAAL,CAAcK,MAAd,CAAqBH,KAA5B;AACH;;AA9DyC;;AAiE9CL,MAAM,CAAC;AAACC,EAAAA;AAAD,CAAD,CAAN","sourcesContent":["import {ShaderMaterial, Color} from 'three'\nimport {extend} from 'react-three-fiber'\n\nclass LightbarMaterial extends ShaderMaterial {\n    constructor() {\n        super({\n            uniforms: {\n                uColor: {value: new Color('#FFFFFF')},\n                uOpacity: {value: 1.0},\n                uTime: {value: 0.0},\n                uShift: {value: 0.0},\n            },\n\n            vertexShader: `\n        uniform float uShift;\n        varying vec2 vUv;\n        void main() {\n          vec3 pos = position;\n          pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * uShift * 5.0) * 0.125);\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n        }`,\n\n            fragmentShader: `\n        uniform vec3 uColor;\n        uniform float uOpacity;\n        uniform float uTime;\n        uniform float uShift;\n        varying vec2 vUv;\n        void main() {\n          \n          gl_FragColor = vec4(uColor.rgb, uOpacity);\n        }`,\n        })\n    }\n\n    set uColor(value) {\n        this.uniforms.uColor.value = value\n    }\n\n    get uColor() {\n        return this.uniforms.uColor.value\n    }\n\n    set uOpacity(value) {\n        this.uniforms.uOpacity.value = value\n    }\n\n    get uOpacity() {\n        return this.uniforms.uOpacity.value\n    }\n\n    set uTime(value) {\n        this.uniforms.time.value = value\n    }\n\n    get uTime() {\n        return this.uniforms.time.value\n    }\n    set uShift(value) {\n        this.uniforms.uShift.value = value\n    }\n\n    get uShift() {\n        return this.uniforms.uShift.value\n    }\n}\n\nextend({LightbarMaterial})\n"]},"metadata":{},"sourceType":"module"}