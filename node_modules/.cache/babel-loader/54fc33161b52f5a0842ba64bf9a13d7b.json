{"ast":null,"code":"var _jsxFileName = \"/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Storm.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport lerp from 'lerp';\nimport state from '../../store';\nimport '../materials/SmokeMaterial';\n\nfunction Storm(props) {\n  const smoke = useRef();\n  const wire = useRef();\n  const smokeMaterial = useRef();\n  const wireMaterial = useRef();\n  useEffect(() => {\n    if (wireMaterial) {\n      wireMaterial.current.isWire = 1.0;\n    }\n  }, []);\n  const lerpFactor = 0.025;\n  const intensity = 75;\n  const restingMovement = 5.0;\n\n  const _useThree = useThree(),\n        _useThree$viewport = _useThree.viewport,\n        width = _useThree$viewport.width,\n        height = _useThree$viewport.height;\n\n  const radius = Math.max(width / 4, height / 4);\n  let last = state.top.current;\n  let start = Date.now();\n  useFrame(() => {\n    const top = state.top;\n    const scrollSpeed = top.current - last;\n    smokeMaterial.current.time = 0.00025 * (Date.now() - start);\n    wireMaterial.current.time = 0.00025 * (Date.now() - start);\n    smokeMaterial.current.lowFreqAmp = lerp(smokeMaterial.current.lowFreqAmp, Math.abs(scrollSpeed) * radius / intensity + restingMovement, lerpFactor);\n    smokeMaterial.current.highFreqAmp = lerp(smokeMaterial.current.highFreqAmp, Math.abs(scrollSpeed) * radius / intensity + restingMovement, lerpFactor);\n    wireMaterial.current.lowFreqAmp = lerp(wireMaterial.current.lowFreqAmp, Math.abs(scrollSpeed) * radius / intensity + restingMovement, lerpFactor);\n    wireMaterial.current.highFreqAmp = lerp(wireMaterial.current.highFreqAmp, Math.abs(scrollSpeed) * radius / intensity + restingMovement, lerpFactor);\n    last = top.current;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: smoke,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\", {\n    args: [radius, 5],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"smokeMaterial\", {\n    ref: smokeMaterial,\n    attach: \"material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: wire,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\", {\n    args: [radius + 0.02, 3],\n    attach: \"geometry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"smokeMaterial\", {\n    ref: wireMaterial,\n    attach: \"material\",\n    wireframe: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Storm;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/objects/Storm.js"],"names":["React","useRef","useEffect","useFrame","useThree","lerp","state","Storm","props","smoke","wire","smokeMaterial","wireMaterial","current","isWire","lerpFactor","intensity","restingMovement","viewport","width","height","radius","Math","max","last","top","start","Date","now","scrollSpeed","time","lowFreqAmp","abs","highFreqAmp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,mBAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,4BAAP;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAMC,KAAK,GAAGR,MAAM,EAApB;AACA,QAAMS,IAAI,GAAGT,MAAM,EAAnB;AACA,QAAMU,aAAa,GAAGV,MAAM,EAA5B;AACA,QAAMW,YAAY,GAAGX,MAAM,EAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,YAAJ,EAAkB;AACdA,MAAAA,YAAY,CAACC,OAAb,CAAqBC,MAArB,GAA8B,GAA9B;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,UAAU,GAAG,KAAnB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,eAAe,GAAG,GAAxB;;AAdkB,oBAkBdb,QAAQ,EAlBM;AAAA,uCAiBdc,QAjBc;AAAA,QAiBHC,KAjBG,sBAiBHA,KAjBG;AAAA,QAiBIC,MAjBJ,sBAiBIA,MAjBJ;;AAoBlB,QAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,GAAG,CAAjB,EAAoBC,MAAM,GAAG,CAA7B,CAAf;AAEA,MAAII,IAAI,GAAGlB,KAAK,CAACmB,GAAN,CAAUZ,OAArB;AACA,MAAIa,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AAEAzB,EAAAA,QAAQ,CAAC,MAAM;AAAA,UACJsB,GADI,GACGnB,KADH,CACJmB,GADI;AAEX,UAAMI,WAAW,GAAGJ,GAAG,CAACZ,OAAJ,GAAcW,IAAlC;AACAb,IAAAA,aAAa,CAACE,OAAd,CAAsBiB,IAAtB,GAA6B,WAAWH,IAAI,CAACC,GAAL,KAAaF,KAAxB,CAA7B;AACAd,IAAAA,YAAY,CAACC,OAAb,CAAqBiB,IAArB,GAA4B,WAAWH,IAAI,CAACC,GAAL,KAAaF,KAAxB,CAA5B;AAEAf,IAAAA,aAAa,CAACE,OAAd,CAAsBkB,UAAtB,GAAmC1B,IAAI,CACnCM,aAAa,CAACE,OAAd,CAAsBkB,UADa,EAElCT,IAAI,CAACU,GAAL,CAASH,WAAT,IAAwBR,MAAzB,GAAmCL,SAAnC,GAA+CC,eAFZ,EAGnCF,UAHmC,CAAvC;AAKAJ,IAAAA,aAAa,CAACE,OAAd,CAAsBoB,WAAtB,GAAoC5B,IAAI,CACpCM,aAAa,CAACE,OAAd,CAAsBoB,WADc,EAEnCX,IAAI,CAACU,GAAL,CAASH,WAAT,IAAwBR,MAAzB,GAAmCL,SAAnC,GAA+CC,eAFX,EAGpCF,UAHoC,CAAxC;AAMAH,IAAAA,YAAY,CAACC,OAAb,CAAqBkB,UAArB,GAAkC1B,IAAI,CAClCO,YAAY,CAACC,OAAb,CAAqBkB,UADa,EAEjCT,IAAI,CAACU,GAAL,CAASH,WAAT,IAAwBR,MAAzB,GAAmCL,SAAnC,GAA+CC,eAFb,EAGlCF,UAHkC,CAAtC;AAKAH,IAAAA,YAAY,CAACC,OAAb,CAAqBoB,WAArB,GAAmC5B,IAAI,CACnCO,YAAY,CAACC,OAAb,CAAqBoB,WADc,EAElCX,IAAI,CAACU,GAAL,CAASH,WAAT,IAAwBR,MAAzB,GAAmCL,SAAnC,GAA+CC,eAFZ,EAGnCF,UAHmC,CAAvC;AAMAS,IAAAA,IAAI,GAAGC,GAAG,CAACZ,OAAX;AACH,GA7BO,CAAR;AA+BA,sBACI,+CAAWL,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAM,IAAA,GAAG,EAAEC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAA2B,IAAA,IAAI,EAAE,CAACY,MAAD,EAAS,CAAT,CAAjC;AAA8C,IAAA,MAAM,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAe,IAAA,GAAG,EAAEV,aAApB;AAAmC,IAAA,MAAM,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAMI;AAAM,IAAA,GAAG,EAAED,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAA2B,IAAA,IAAI,EAAE,CAACW,MAAM,GAAG,IAAV,EAAgB,CAAhB,CAAjC;AAAqD,IAAA,MAAM,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAe,IAAA,GAAG,EAAET,YAApB;AAAkC,IAAA,MAAM,EAAC,UAAzC;AAAoD,IAAA,SAAS,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,CADJ;AAaH;;AAED,eAAeL,KAAf","sourcesContent":["import React, {useRef, useEffect} from 'react'\nimport {useFrame, useThree} from 'react-three-fiber'\nimport lerp from 'lerp'\nimport state from '../../store'\n\nimport '../materials/SmokeMaterial'\n\nfunction Storm(props) {\n    const smoke = useRef()\n    const wire = useRef()\n    const smokeMaterial = useRef()\n    const wireMaterial = useRef()\n\n    useEffect(() => {\n        if (wireMaterial) {\n            wireMaterial.current.isWire = 1.0\n        }\n    }, [])\n\n    const lerpFactor = 0.025\n    const intensity = 75\n    const restingMovement = 5.0\n\n    const {\n        viewport: {width, height},\n    } = useThree()\n\n    const radius = Math.max(width / 4, height / 4)\n\n    let last = state.top.current\n    let start = Date.now()\n\n    useFrame(() => {\n        const {top} = state\n        const scrollSpeed = top.current - last\n        smokeMaterial.current.time = 0.00025 * (Date.now() - start)\n        wireMaterial.current.time = 0.00025 * (Date.now() - start)\n\n        smokeMaterial.current.lowFreqAmp = lerp(\n            smokeMaterial.current.lowFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n        smokeMaterial.current.highFreqAmp = lerp(\n            smokeMaterial.current.highFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n\n        wireMaterial.current.lowFreqAmp = lerp(\n            wireMaterial.current.lowFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n        wireMaterial.current.highFreqAmp = lerp(\n            wireMaterial.current.highFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n\n        last = top.current\n    })\n\n    return (\n        <group {...props}>\n            <mesh ref={smoke}>\n                <icosahedronBufferGeometry args={[radius, 5]} attach=\"geometry\" />\n                <smokeMaterial ref={smokeMaterial} attach=\"material\" />\n            </mesh>\n\n            <mesh ref={wire}>\n                <icosahedronBufferGeometry args={[radius + 0.02, 3]} attach=\"geometry\" />\n                <smokeMaterial ref={wireMaterial} attach=\"material\" wireframe={true} />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Storm\n"]},"metadata":{},"sourceType":"module"}