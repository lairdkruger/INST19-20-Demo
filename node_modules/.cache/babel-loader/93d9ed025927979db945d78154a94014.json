{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{useFrame,useThree}from'react-three-fiber';import lerp from'lerp';import state from'../../store';import'../materials/SmokeMaterial';function Storm(props){const smoke=useRef();const wire=useRef();const smokeMaterial=useRef();const wireMaterial=useRef();useEffect(()=>{if(wireMaterial){wireMaterial.current.isWire=1.0;}},[]);const lerpFactor=0.025;const intensity=75;const restingMovement=2.5;const _useThree=useThree(),_useThree$viewport=_useThree.viewport,width=_useThree$viewport.width,height=_useThree$viewport.height;const radius=Math.max(width/4,height/4);let last=state.top.current;let start=Date.now();useFrame(()=>{const top=state.top;const scrollSpeed=top.current-last;smokeMaterial.current.time=0.00025*(Date.now()-start);wireMaterial.current.time=0.00025*(Date.now()-start);smokeMaterial.current.lowFreqAmp=lerp(smokeMaterial.current.lowFreqAmp,Math.abs(scrollSpeed)*radius/intensity+restingMovement,lerpFactor);smokeMaterial.current.highFreqAmp=lerp(smokeMaterial.current.highFreqAmp,Math.abs(scrollSpeed)*radius/intensity+restingMovement,lerpFactor);wireMaterial.current.lowFreqAmp=lerp(wireMaterial.current.lowFreqAmp,Math.abs(scrollSpeed)*radius/intensity+restingMovement,lerpFactor);wireMaterial.current.highFreqAmp=lerp(wireMaterial.current.highFreqAmp,Math.abs(scrollSpeed)*radius/intensity+restingMovement,lerpFactor);last=top.current;});return/*#__PURE__*/React.createElement(\"group\",Object.assign({},props,{position:[width/2,0,0]}),/*#__PURE__*/React.createElement(\"mesh\",{ref:smoke},/*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\",{args:[radius,5],attach:\"geometry\"}),/*#__PURE__*/React.createElement(\"smokeMaterial\",{ref:smokeMaterial,attach:\"material\",transparent:true})),/*#__PURE__*/React.createElement(\"mesh\",{ref:wire},/*#__PURE__*/React.createElement(\"icosahedronBufferGeometry\",{args:[radius+0.02,3],attach:\"geometry\"}),/*#__PURE__*/React.createElement(\"smokeMaterial\",{ref:wireMaterial,attach:\"material\",wireframe:true,transparent:true})));}export default Storm;","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/Demo/INST19-20-Demo/INST19-20-Demo/src/components/objects/Storm.js"],"names":["React","useRef","useEffect","useFrame","useThree","lerp","state","Storm","props","smoke","wire","smokeMaterial","wireMaterial","current","isWire","lerpFactor","intensity","restingMovement","viewport","width","height","radius","Math","max","last","top","start","Date","now","scrollSpeed","time","lowFreqAmp","abs","highFreqAmp"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react'\nimport {useFrame, useThree} from 'react-three-fiber'\nimport lerp from 'lerp'\nimport state from '../../store'\n\nimport '../materials/SmokeMaterial'\n\nfunction Storm(props) {\n    const smoke = useRef()\n    const wire = useRef()\n    const smokeMaterial = useRef()\n    const wireMaterial = useRef()\n\n    useEffect(() => {\n        if (wireMaterial) {\n            wireMaterial.current.isWire = 1.0\n        }\n    }, [])\n\n    const lerpFactor = 0.025\n    const intensity = 75\n    const restingMovement = 2.5\n\n    const {\n        viewport: {width, height},\n    } = useThree()\n\n    const radius = Math.max(width / 4, height / 4)\n\n    let last = state.top.current\n    let start = Date.now()\n\n    useFrame(() => {\n        const {top} = state\n        const scrollSpeed = top.current - last\n        smokeMaterial.current.time = 0.00025 * (Date.now() - start)\n        wireMaterial.current.time = 0.00025 * (Date.now() - start)\n\n        smokeMaterial.current.lowFreqAmp = lerp(\n            smokeMaterial.current.lowFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n        smokeMaterial.current.highFreqAmp = lerp(\n            smokeMaterial.current.highFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n\n        wireMaterial.current.lowFreqAmp = lerp(\n            wireMaterial.current.lowFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n        wireMaterial.current.highFreqAmp = lerp(\n            wireMaterial.current.highFreqAmp,\n            (Math.abs(scrollSpeed) * radius) / intensity + restingMovement,\n            lerpFactor\n        )\n\n        last = top.current\n    })\n\n    return (\n        <group {...props} position={[width / 2, 0, 0]}>\n            <mesh ref={smoke}>\n                <icosahedronBufferGeometry args={[radius, 5]} attach=\"geometry\" />\n                <smokeMaterial ref={smokeMaterial} attach=\"material\" transparent={true} />\n            </mesh>\n\n            <mesh ref={wire}>\n                <icosahedronBufferGeometry args={[radius + 0.02, 3]} attach=\"geometry\" />\n                <smokeMaterial\n                    ref={wireMaterial}\n                    attach=\"material\"\n                    wireframe={true}\n                    transparent={true}\n                />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Storm\n"]},"metadata":{},"sourceType":"module"}