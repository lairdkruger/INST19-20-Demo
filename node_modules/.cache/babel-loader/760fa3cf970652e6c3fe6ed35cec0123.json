{"ast":null,"code":"import { useMemo, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer, EffectPass, NoiseEffect, RenderPass, BloomEffect } from 'postprocessing';\nexport default function Postprocessing() {\n  const _useThree = useThree(),\n        gl = _useThree.gl,\n        scene = _useThree.scene,\n        camera = _useThree.camera,\n        size = _useThree.size;\n\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl);\n    composer.addPass(new RenderPass(scene, camera));\n    const bloomEffect = new BloomEffect({\n      luminanceThreshold: 0.0,\n      intensity: 1.5,\n      luminanceSmoothing: 0.0025\n    });\n    const noiseEffect = new NoiseEffect({\n      premultiply: true,\n      intensity: 100\n    });\n    const effectPass = new EffectPass(camera, noiseEffect);\n    effectPass.renderToScreen = true;\n    composer.addPass(effectPass);\n    return composer;\n  }, []);\n  useEffect(() => void composer.setSize(size.width, size.height), [size]);\n  return useFrame((_, delta) => composer.render(delta), 1);\n}","map":{"version":3,"sources":["/Users/lairdkruger/Documents/Web Development/Work/inst19-20/Sites/INST19/INST19/src/components/postprocessing/Postprocessing.js"],"names":["useMemo","useEffect","useThree","useFrame","EffectComposer","EffectPass","NoiseEffect","RenderPass","BloomEffect","Postprocessing","gl","scene","camera","size","composer","addPass","bloomEffect","luminanceThreshold","intensity","luminanceSmoothing","noiseEffect","premultiply","effectPass","renderToScreen","setSize","width","height","_","delta","render"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,mBAAjC;AACA,SACIC,cADJ,EAEIC,UAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,WALJ,QAMO,gBANP;AAQA,eAAe,SAASC,cAAT,GAA0B;AAAA,oBACHP,QAAQ,EADL;AAAA,QAC9BQ,EAD8B,aAC9BA,EAD8B;AAAA,QAC1BC,KAD0B,aAC1BA,KAD0B;AAAA,QACnBC,MADmB,aACnBA,MADmB;AAAA,QACXC,IADW,aACXA,IADW;;AAGrC,QAAMC,QAAQ,GAAGd,OAAO,CAAC,MAAM;AAC3B,UAAMc,QAAQ,GAAG,IAAIV,cAAJ,CAAmBM,EAAnB,CAAjB;AACAI,IAAAA,QAAQ,CAACC,OAAT,CAAiB,IAAIR,UAAJ,CAAeI,KAAf,EAAsBC,MAAtB,CAAjB;AAEA,UAAMI,WAAW,GAAG,IAAIR,WAAJ,CAAgB;AAChCS,MAAAA,kBAAkB,EAAE,GADY;AAEhCC,MAAAA,SAAS,EAAE,GAFqB;AAGhCC,MAAAA,kBAAkB,EAAE;AAHY,KAAhB,CAApB;AAMA,UAAMC,WAAW,GAAG,IAAId,WAAJ,CAAgB;AAACe,MAAAA,WAAW,EAAE,IAAd;AAAoBH,MAAAA,SAAS,EAAE;AAA/B,KAAhB,CAApB;AAEA,UAAMI,UAAU,GAAG,IAAIjB,UAAJ,CAAeO,MAAf,EAAuBQ,WAAvB,CAAnB;AACAE,IAAAA,UAAU,CAACC,cAAX,GAA4B,IAA5B;AACAT,IAAAA,QAAQ,CAACC,OAAT,CAAiBO,UAAjB;AAEA,WAAOR,QAAP;AACH,GAjBuB,EAiBrB,EAjBqB,CAAxB;AAmBAb,EAAAA,SAAS,CAAC,MAAM,KAAKa,QAAQ,CAACU,OAAT,CAAiBX,IAAI,CAACY,KAAtB,EAA6BZ,IAAI,CAACa,MAAlC,CAAZ,EAAuD,CAACb,IAAD,CAAvD,CAAT;AAEA,SAAOV,QAAQ,CAAC,CAACwB,CAAD,EAAIC,KAAJ,KAAcd,QAAQ,CAACe,MAAT,CAAgBD,KAAhB,CAAf,EAAuC,CAAvC,CAAf;AACH","sourcesContent":["import {useMemo, useEffect} from 'react'\nimport {useThree, useFrame} from 'react-three-fiber'\nimport {\n    EffectComposer,\n    EffectPass,\n    NoiseEffect,\n    RenderPass,\n    BloomEffect,\n} from 'postprocessing'\n\nexport default function Postprocessing() {\n    const {gl, scene, camera, size} = useThree()\n\n    const composer = useMemo(() => {\n        const composer = new EffectComposer(gl)\n        composer.addPass(new RenderPass(scene, camera))\n\n        const bloomEffect = new BloomEffect({\n            luminanceThreshold: 0.0,\n            intensity: 1.5,\n            luminanceSmoothing: 0.0025,\n        })\n\n        const noiseEffect = new NoiseEffect({premultiply: true, intensity: 100})\n\n        const effectPass = new EffectPass(camera, noiseEffect)\n        effectPass.renderToScreen = true\n        composer.addPass(effectPass)\n\n        return composer\n    }, [])\n\n    useEffect(() => void composer.setSize(size.width, size.height), [size])\n\n    return useFrame((_, delta) => composer.render(delta), 1)\n}\n"]},"metadata":{},"sourceType":"module"}